---
import Tile from "./Tile.astro";
import type { ImageMetadata } from "astro";

interface Props {
	talks: Talk[];
}

interface Talk {
	data: {
		title: string;
		brief: string;
		date: string;
		cover: string;
		external?: string;
		color?: string;
	};
	slug: string;
}

const { talks } = Astro.props as Props;

// Sort talks by date in descending order
const sortedTalks = [...talks].sort(
	(a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Function to get the image path or import it dynamically
async function getImageSource(talk: Talk) {
	if (talk.data.cover.startsWith("http")) {
		return talk.data.cover;
	}

	// For local images, use dynamic import
	try {
		// Use dynamic import for local images
		const images = import.meta.glob<{ default: ImageMetadata }>(
			"/src/images/talks/**/*.{jpeg,jpg,png,gif,avif,webp,svg}"
		);
		const imagePath = `/src/images/talks/${talk.data.cover}`;

		if (images[imagePath]) {
			const image = await images[imagePath]();
			return image.default;
		} else {
			console.error(`Image not found: ${imagePath}`);
			return talk.data.cover; // Fallback to the original path
		}
	} catch (error) {
		console.error("Error loading image:", error);
		return talk.data.cover; // Fallback to the original path
	}
}

// Process all images upfront
const talkImages = await Promise.all(
	sortedTalks.map(async (talk) => ({
		talk,
		imageSource: await getImageSource(talk),
	}))
);
---

<section id="talks" class="outline-[0.5px] outline-muted">
	<div
		class="grid justify-center grid-cols-[repeat(auto-fit,minmax(18rem,1fr))]"
	>
		{
			talkImages.map(({ talk, imageSource }) => {
				const fm = talk.data;
				const link = fm.external || `/talks/${talk.slug}`;

				return (
					<Tile
						href={link}
						target={fm.external ? "_blank" : undefined}
						image={{
							src: imageSource,
							alt: fm.title,
							width: 48,
							height: 48,
							class: "object-cover w-12 h-12",
						}}
						title={fm.title}
						label={fm.brief}
						color={fm.color}
						dense
					/>
				);
			})
		}
	</div>
</section>
