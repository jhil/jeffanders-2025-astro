---
import { Image } from "astro:assets";
interface Project {
	data: {
		title: string;
		brief: string;
		date: string;
		cover: string;
		external?: string;
	};
	slug: string;
}

const { projects }: { projects: Project[] } = Astro.props as {
	projects: Project[];
};

projects.sort(
	(a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<section id="projects">
	<div
		class="grid justify-center grid-cols-[repeat(auto-fit,minmax(14rem,1fr))]"
	>
		{
			projects.map((project) => {
				const fm = project.data;
				// If external URL is provided, use that; otherwise, link to the internal project page.
				const link = fm.external ? fm.external : `/projects/${project.slug}`;
				const target = fm.external ? "_blank" : "_self";
				return (
					<a
						href={link}
						target={target}
						class="outline outline-muted p-8 flex flex-col gap-y-4 group"
					>
						<Image
							src={`/src/images/projects/${project.slug}/${fm.cover}`}
							alt={fm.title}
							width={384}
							height={256}
							class="object-cover rounded-xs aspect-[3/2]"
							loading="lazy"
						/>
						<div class="flex flex-col gap-y-2">
							<h3 class="text-sm font-medium">
								<span class="animated-underline group-hover:after:w-full">
									{fm.title}
								</span>
							</h3>
							<p class="text-xs text-muted-foreground/90 group-hover:text-muted-foreground">
								{fm.brief}
							</p>
						</div>
					</a>
				);
			})
		}
	</div>
</section>
