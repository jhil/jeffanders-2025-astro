---
import { Image } from "astro:assets";

/*
  Expects a prop `projects`, an array of objects from the 'projects' collection.
  Each project object contains:
    - data: an object with keys: title, brief, date, thumbnail, external (optional)
    - slug: string (generated from the MDX file name)
*/
interface Project {
	data: {
		title: string;
		brief: string;
		date: string;
		thumbnail: string;
		external?: string;
	};
	slug: string;
}

const { projects }: { projects: Project[] } = Astro.props as {
	projects: Project[];
};

projects.sort(
	(a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<section id="projects" class="px-16 py-8">
	<div
		class="grid gap-16 justify-center grid-cols-[repeat(auto-fit,minmax(10rem,1fr))]"
	>
		{
			projects.map((project) => {
				const fm = project.data;
				// If external URL is provided, use that; otherwise, link to the internal project page.
				const link = fm.external ? fm.external : `/projects/${project.slug}`;
				const target = fm.external ? "_blank" : "_self";
				return (
					<div class="max-w-[12rem] mx-auto">
						<a href={link} target={target} class="flex flex-col gap-y-3 group">
							<Image
								src={`/src/images/projects/${project.slug}/${fm.thumbnail}`}
								alt={fm.title}
								width={384}
								height={256}
								class="object-cover rounded-xs aspect-[3/2]"
								loading="lazy"
							/>
							<div class="flex flex-col gap-y-1">
								<h3 class="text-sm font-medium group-hover:underline">
									{fm.title}
								</h3>
								<p class="text-xs text-gray-400 group-hover:text-gray-600">
									{fm.brief}
								</p>
							</div>
						</a>
					</div>
				);
			})
		}
	</div>
</section>
